version: '3.8'

services:
  #контейнеры frontend'a
  nginx:
    container_name: fnginx
    image: "nginx:stable-alpine"
    ports:
      - 82:80
    environment:
      - VIRTUAL_HOST=mangaspace.ru
    volumes:
      - ./configs/nginx.conf/:/etc/nginx/conf.d/default.conf:ro
      - ./src:/var/www/laravel
    networks:
      - frontend

  nodejs:
    container_name: fnodejs
    environment:
      - PORT=5173
    build:
      context: dockerfiles
      dockerfile: nodejs.Dockerfile
    ports:
      - 5173:5173
    volumes:
      - ./src:/var/www/laravel
    networks:
      - frontend

  php:
    container_name: fphp
    build:
      context: dockerfiles
      dockerfile: php.Dockerfile
    volumes:  
      - ./src:/var/www/laravel
    networks:
      - frontend
      - shared

  # mysql:
  #   container_name: fmysql
  #   image: mysql:8.0
  #   environment:
  #     MYSQL_HOST: mysql
  #     MYSQL_ROOT_PASSWORD: root
  #     MYSQL_USER: laravel
  #     MYSQL_PASSWORD: laravel
  #   volumes:
  #     - ./data/mysql:/var/lib/mysql
  #   networks:
  #     - frontend
  #     - shared

  # phpmyadmin:
  #   container_name: fpma
  #   image: phpmyadmin:5.2
  #   ports:
  #     - 8080:80
  #   environment:
  #     PMA_HOST: mysql
  #     MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD
  #     PMA_PORT: 3306
  #   networks:
  #     - frontend
  #     - shared

  # redis:
  #   container_name: redis
  #   image: redis/redis-stack:latest
  #   environment:
  #     REDIS_ARGS: "--requirepass laravel --user laravel on >laravel ~* allcommands --user default off nopass nocommands"
  #   ports:
  #     - 6379:6379
  #     - 8001:8001
  #   networks:
  #     - frontend

  # supervisor:
  #   build:
  #     context: dockerfiles
  #     dockerfile: supervisor.Dockerfile
  #   container_name: supervisor
  #   environment:
  #     - PORT=8000
  #   volumes:
  #     - ./src:/var/www/laravel
  #     - ./configs/supervisord.conf:/etc/supervisor/conf.d/supervisord.conf:ro
  #     - ./configs/supervisord.conf:/etc/supervisord.conf:ro
  #     - ./src/storage/logs:/etc/supervisor/logs
  #   command: "supervisord -n -c /etc/supervisord.conf"
  #   ports:
  #     - 8000:8000
  #   networks:
  #     - frontend

  # вспомогательные контейнеры
  composer:
    container_name: fcomposer
    build:
      context: dockerfiles
      dockerfile: composer.Dockerfile
    volumes:
      - ./src:/var/www/laravel
    networks:
      - frontend

  artisan:
    container_name: fartisan
    build:
      context: dockerfiles
      dockerfile: php.Dockerfile
    volumes:
      - ./src:/var/www/laravel
    entrypoint: [ "php", "/var/www/laravel/artisan" ]
    networks:
      - frontend

networks:
  frontend:
    driver: bridge
  frontend_nginx:
    driver: bridge
  shared:
    driver: bridge
    external: true
